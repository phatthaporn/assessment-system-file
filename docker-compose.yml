version: '3.8'
services:

  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - "80:80"
    networks:
      - nginx
      - backend
      - frontend
 
  api :
    build: ./server
    depends_on: 
      - db
    ports:
      - "4000:4000"
    networks:
      - backend
    environment:
      # - EXTERNAL_PORT=3001
      - PGUSER=postgres
      - PGPASSWORD=12345678
      - PGDATABASE=assessment-system
      - PGHOST=db # NAME OF THE SERVICE
    # volumes:
    #   # Maps our current project directory `.` to
    #   # our working directory in the container
      - ./:/usr/src/app/
    #   # node_modules workaround for volumes
    #   # https://stackoverflow.com/a/32785014
      - /usr/src/app/node_modules

  client :
    container_name: frontend
    build: ./client
    volumes:
      - './client:/app'
      - '/app/node_modules'
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start
    networks:
      - frontend  
 
  db:
    image: postgres:14.5-alpine
    restart: always
    environment:
      - POSTGRES_DB=assessment-system
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db-data:/var/lib/postgresql/data/pgdata 
    networks:
      - backend
      - frontend

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - "53603:53603"
      - "8085:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: root
    networks:
      - backend 

  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes: 
  db-data:
  portainer_data:
  pgadmin-data:

networks:
  backend:
  frontend:
  nginx:
